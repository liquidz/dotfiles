unbind C-b
unbind j
unbind k
unbind l
unbind h
unbind n
unbind p
unbind Enter

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# プレフィックスを設定
set-option -g prefix C-a
# 256色端末を使用する
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

set-window-option -g mode-keys vi

# キーストロークのディレイを減らす
set -sg escape-time 1

# ペイン
## vim と同じようにペイン移動
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind h select-pane -L
## https://github.com/christoomey/vim-tmux-navigator
bind -n C-w switch-client -T NAVIGATOR
bind -T NAVIGATOR h if-shell "$is_vim" "send-keys C-w h" "select-pane -L"
bind -T NAVIGATOR j if-shell "$is_vim" "send-keys C-w j" "select-pane -D"
bind -T NAVIGATOR k if-shell "$is_vim" "send-keys C-w k" "select-pane -U"
bind -T NAVIGATOR l if-shell "$is_vim" "send-keys C-w l" "select-pane -R"
bind -T NAVIGATOR H if-shell "$is_vim" "send-keys C-w H" "select-layout main-vertical \; swap-pane -s : -t 0 \; select-pane -t 0 \; resize-pane -R 15"
bind -T NAVIGATOR o if-shell "$is_vim" "send-keys C-w o" "resize-pane -Z"
bind -T NAVIGATOR C-w send-keys C-w C-w
bind -T NAVIGATOR J send-keys C-w J
bind -T NAVIGATOR K send-keys C-w K
bind -T NAVIGATOR L send-keys C-w L
bind -T NAVIGATOR v send-keys C-w v
bind -T NAVIGATOR s send-keys C-w s

## ペインを消す
bind C-k kill-pane
## Swap
bind H select-layout main-vertical \; swap-pane -s : -t 0 \; select-pane -t 0 \; resize-pane -R 15
## ペインのリサイズ
bind -r > resize-pane -R 8
bind -r < resize-pane -L 7
bind -r + resize-pane -D 7
bind -r - resize-pane -U 7
## ウインドウ移動
bind -r n next-window
bind -r p previous-window
bind -r J next-window
bind -r K previous-window

## ペイン分割時に同一ディレクトリを開く
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'
## カレントペインを目立たせる
set -g pane-active-border-fg black
set -g pane-active-border-bg cyan

bind C-p choose-tree pane

# C-a*2 で tmux 内のプログラムに C-a を送る
bind C-a send-prefix

# 設定の再読み込み
bind R source-file ~/.tmux.conf \; display "Reloaded"

# コマンドラインの設定
set -g message-fg black
set -g message-bg red
#set -g message-attr bright
set -g message-attr bright

# ステータスバー設定
set -g status-interval 10
set -g status-bg colour116
set -g window-status-current-fg white
set -g window-status-current-bg black
#set -g message-bg "#339966"
set -g message-bg green
set -g message-fg white
#set -g message-fg "#FF0000"
set -g message-attr bold


# コピーモード
## v でコピーモード開始
#bind-key -t vi-copy v begin-selection
## Clipboard Copy
#if "test `uname` = 'Darwin'" "set-option -g default-command 'reattach-to-user-namespace -l $SHELL'"
#if "test `uname` = 'Darwin'" "bind C-c run-shell 'reattach-to-user-namespace tmux-pbcopy'"

# 複数ペインで同じ操作をする
#bind S setw synchronize-panes on
#bind s setw synchronize-panes off

# プラグイン
#set -g @tpm_plugins '               \
#  tmux-plugins/tpm                  \
#  tmux-plugins/tmux-logging         \
#  tmux-plugins/tmux-sessionist      \
#  tmux-plugins/tmux-resurrect       \
#  tmux-plugins/tmux-continuum       \
#'
#
#run-shell '~/.tmux/plugins/tpm/tpm'
