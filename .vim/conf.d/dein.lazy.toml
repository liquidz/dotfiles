
[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'jceb/vim-hier'

[[plugins]]
repo = 'osyo-manga/vim-watchdogs'
depends = [
  'vim-hier',
  'shabadou.vim',
  'vim-quickrun'
]
on_event = ['FocusLost', 'CursorHold']
hook_add = '''
  let g:watchdogs_check_BufWritePost_enable = 1
'''
hook_post_source = '''
  call watchdogs#setup(g:quickrun_config)
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

#[[plugins]]
#repo = 'supermomonga/neocomplete-rsense.vim'
#if = "has('lua')"
#on_ft = 'ruby'
#depends = 'neocomplete.vim'

[[plugins]]
repo = 'vim-scripts/ruby-matchit'
on_ft = 'ruby'

[[plugins]]
repo = 'nelstrom/vim-textobj-rubyblock'
on_ft = 'ruby'

[[plugins]]
repo = 'guns/vim-clojure-static'
if = 'has("unix")'
on_ft = 'clojure'

[[plugins]]
repo = 'tpope/vim-fireplace'
if = 'has("unix")'
on_ft = 'clojure'
hook_source = '''
  aug VimFireplaceSetting
    au!
    au Filetype clojure nnoremap <Leader>r :Require!<CR>
    " vim-ref の K と競合するため再定義
    au Filetype clojure nmap <buffer> K <Plug>FireplaceK
  aug END
'''

[[plugins]]
#repo = 'vim-scripts/paredit.vim'
repo = 'guns/vim-sexp'
if = 'has("unix")'
on_ft = 'clojure'

[[plugins]]
repo = 'tpope/vim-classpath'
if = 'has("unix")'
on_ft = 'clojure'

[[plugins]]
repo = 'typedclojure/vim-typedclojure'
if = 'has("unix")'
on_ft = 'clojure'

[[plugins]]
repo = 'kana/vim-submode'
on_event = ['VimEnter']
hook_add = '''
  let g:submode_timeout = 0
'''
hook_post_source = '''
  call submode#enter_with('window', 'n', '', '<C-w><C-w>', '<Nop>')
  call submode#leave_with('window', 'n', '', '<Esc>')
  call submode#map('window', 'n', '', 'j', '<C-w>j')
  call submode#map('window', 'n', '', 'J', '<C-w>J')
  call submode#map('window', 'n', '', 'k', '<C-w>k')
  call submode#map('window', 'n', '', 'K', '<C-w>K')
  call submode#map('window', 'n', '', 'l', '<C-w>l')
  call submode#map('window', 'n', '', 'L', '<C-w>L')
  call submode#map('window', 'n', '', 'h', '<C-w>h')
  call submode#map('window', 'n', '', 'H', '<C-w>h')
  call submode#map('window', 'n', '', 's', '<C-w>s')
  call submode#map('window', 'n', '', 'v', '<C-w>v')
  call submode#map('window', 'n', '', 'x', ':q<CR>')
  call submode#map('window', 'n', '', '>', '<C-w>5>')
  call submode#map('window', 'n', '', '<', '<C-w>5<lt>')
  call submode#map('window', 'n', '', '+', '<C-w>5+')
  call submode#map('window', 'n', '', '-', '<C-w>5-')
'''

[[plugins]]
repo = 'kien/rainbow_parentheses.vim'
on_event = ['VimEnter']
hook_add = '''
  let g:rbpt_colorpairs = [
      \ ['brown',       'RoyalBlue3'],
      \ ['darkgreen',   'firebrick3'],
      \ ['darkcyan',    'RoyalBlue3'],
      \ ['darkred',     'SeaGreen3'],
      \ ['darkmagenta', 'DarkOrchid3'],
      \ ['brown',       'firebrick3'],
      \ ['darkmagenta', 'DarkOrchid3'],
      \ ['darkgreen',   'firebrick3'],
      \ ['darkcyan',    'SeaGreen3'],
      \ ['darkred',     'DarkOrchid3'],
      \ ['red',         'firebrick3'],
      \ ]
'''
hook_post_source = '''
  aug MyRainbowParentheses
    au!
    au VimEnter * RainbowParenthesesToggle
    au Syntax * RainbowParenthesesLoadRound
    au Syntax * RainbowParenthesesLoadSquare
    au Syntax * RainbowParenthesesLoadBraces
  aug END
'''
